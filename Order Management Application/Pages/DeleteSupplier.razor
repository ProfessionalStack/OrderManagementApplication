@page "/supplier/delete/{supplierId:int}"
@inject NavigationManager NavigationManager
@using Order_Management_Application.Data;
@inject Order_Management_Application.IRepository.ISupplierRepository supplierRepository;

<h2>Delete User</h2>
<br />
<div class="form-group">
    <h4>Do you want to delete this supplier?</h4>
    <table class="table table-striped table-bordered">
        <tbody>
            <tr>
                <td class="font-weight-bold">Name</td>
                <td>@supplier.SupplierName</td>
            </tr>
            <tr>
                <td class="font-weight-bold">AddressLine1</td>
                <td>@supplier.AddressLine1</td>
            </tr>
            <tr>
                <td class="font-weight-bold">AddressLine2</td>
                <td>@supplier.AddressLine2</td>
            </tr>
            <tr>
                <td class="font-weight-bold">Postal Code</td>
                <td>@supplier.PostalCode</td>
            </tr>
            <tr>
                <td class="font-weight-bold">City</td>
                <td>@supplier.City</td>
            </tr>
            <tr>
                <td class="font-weight-bold">State</td>
                <td>@supplier.State</td>
            </tr>
        </tbody>
    </table>
</div>
<div class="form-group">
    <input type="submit" value="Delete" @onclick="(() => RemoveSupplier(supplier.SupplierID))" class="btn btn-danger" />
    <input type="submit" value="Cancel" @onclick="(() => Cancel())" class="btn btn-warning" />
</div>
@code {
    [Parameter]
    public int supplierId { get; set; }
    Supplier supplier = new Supplier();

    protected override void OnInitialized()
    {
        supplier = supplierRepository.Get(supplierId);
    }
    protected void RemoveSupplier(int supplierID)
    {
        supplierRepository.Delete(supplierID);
        NavigationManager.NavigateTo("/");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("/");
    }
}